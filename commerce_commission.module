<?php
/**
 * @file
 * commerce_commission.module
 */

/**
 * Implements hook_menu().
 */
function commerce_commission_menu() {
  $items = array();

  $items['admin/commerce/config/commission'] = array(
    'title' => 'Commission Settings',
    'description' => 'Configure the commerce commission settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('commerce_commission_settings_form'),
    'access arguments' => array('configure commerce commission'),
    'file' => 'commerce_commission.admin.inc',
  );

  $items['admin/commerce/config/cardonfile/settings'] = array(
    'title' => 'Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items['p/%/%'] = array(
    'page callback' => 'commerce_commission_set_referral_product',
    'page arguments' => array(1, 2),
    'access arguments' => array('access content'),
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function commerce_commission_permission() {
  return array(
    'configure commerce commission' => array(
      'title' => t('Configure commerce commission'),
    ),
  );
}

/**
 * Callback function for referral URL.
 */
function commerce_commission_set_referral_product($username, $node_id) {
  // Initialize the commission settings for the session.
  $_SESSION['commerce_referral'] = array();

  // Check if the node is present.
  $node = node_load($node_id);
  if (!$node) {
    drupal_goto('<front>');
  }

  // Find the user uid for the username in the referral URL.
  $query = db_select('users', 'u')
            ->fields('u', array('uid'))
            ->condition('name', $username)
            ->execute();
  $user_result = $query->fetchObject();

  // If the user with this username does not exist, redirect to the login page.
  if (!$user_result) {
    drupal_goto('user');
  }
  // If the user with this username exists.
  else {
    $products = array();
    // @todo make the field machine name configurable.
    // Using `field_product` by default.
    if (isset($node->field_product) && !empty($node->field_product)) {
      foreach ($node->field_product[LANGUAGE_NONE] as $value) {
        $products[] = $value['product_id'];
      }
    }
    if (!empty($products)) {
      $_SESSION['commerce_referral'] = array(
        'uid' => $user_result->uid,
        'nid' => $node->nid,
        'pid' => $products,
      );
    }

    // @todo increment hit counter in database for analytics.
    drupal_goto('node/' . $node->nid);
    return;
  }
  // Redirect to homepage if any condition is not met.
  drupal_goto('<front>');
}

/**
 * Implements hook_commerce_payment_order_paid_in_full().
 */
function commerce_commission_commerce_payment_order_paid_in_full($order, $transaction) {
  // Check if referral data is present in the session.
  if (isset($_SESSION['commerce_referral']) && !empty($_SESSION['commerce_referral'])) {
    // Getting values of the variables.
    $uid = $_SESSION['commerce_referral']['uid'];
    $node_id = $_SESSION['commerce_referral']['nid'];
    $order_id = $order->order_id;
    $entity = entity_metadata_wrapper('commerce_order', $order);
    $line_items = $entity->commerce_line_items->value();

    foreach ($line_items as $line_item) {
      if (isset($line_item->data) && !empty($line_item->data)) {
        // Get data of entity (node) from the context if it is set.
        if (isset($line_item->data['context'])) {
          if (isset($line_item->data['context']['entity']) && is_array($line_item->data['context']['entity']) && !empty($line_item->data['context']['entity'])) {
            if ($line_item->data['context']['entity']['entity_id'] == $node_id) {
              // Getting the product cost without any tax or discount.
              $product_cost = $line_item->commerce_unit_price[LANGUAGE_NONE][0]['amount'];
              // @todo : Instead of passing the node id, pass and store the product id.
              commerce_commission_grant_permission($uid, $node_id, $order_id, $product_cost);
            }
          }
        }
      }
    }
  }
  // Reset the referral data after purchase.
  $_SESSION['commerce_referral'] = array();
}

/**
 * Provide commission to the stylist.
 */
function commerce_commission_grant_permission($uid, $product_id, $order_id, $product_cost) {
  $commission_percent = variable_get('commerce_commission_percent', 0);
  if ($commission_percent) {
    $commission_amount = ($product_cost * $commission_percent) / 100;
    db_insert('commerce_commission')
      ->fields(array(
        'uid' => $uid,
        'product_id' => $product_id,
        'order_id' => $order_id,
        'commission_amount' => floor($commission_amount),
        'created' => REQUEST_TIME,
      ))
      ->execute();
  }
}

/**
 * Implements hook_preprocess_node().
 */
function commerce_commission_preprocess_node(&$vars) {
  if (isset($_SESSION['commerce_referral']) && !empty($_SESSION['commerce_referral'])) {
    if (isset($vars['field_product']) && !empty($vars['field_product'])) {
      if (count($vars['field_product']) > 1) {
        foreach ($vars['field_product'] as $product) {
        }
      }
    }
  }
}
